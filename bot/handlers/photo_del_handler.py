# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
import asyncio  # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á –∏ –∑–∞–¥–µ—Ä–∂–µ–∫
import re  # –î–ª—è —Ä–µ–≥—É–ª—è—Ä–Ω—ã—Ö –≤—ã—Ä–∞–∂–µ–Ω–∏–π –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
import io  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–π—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
import aiohttp  # –î–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö HTTP-–∑–∞–ø—Ä–æ—Å–æ–≤ –∫ API –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è
from datetime import datetime, timedelta  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∞—Ç–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º
from aiogram import Router, F  # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏–π
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery  # –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö Telegram
from sqlalchemy import select, insert, update, delete  # –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö

from bot.database.models import ChatSettings, UserRestriction  # –ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ë–î
from bot.database.connection import get_session  # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Å—Å–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ë–î
from bot.services.settings_service import get_chat_settings  # –°–µ—Ä–≤–∏—Å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
from bot.utils.logger import get_logger  # –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ —Å–æ–±—ã—Ç–∏–π
from bot.config import config  # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –±–æ—Ç–∞ (—Ç–æ–∫–µ–Ω—ã, –∫–ª—é—á–∏ API)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
photo_del_router = Router()
logger = get_logger(__name__)

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
FORBIDDEN_WORDS = [
    '–Ω–∞—Ä–∫–æ—Ç–∞', '–Ω–∞—Ä–∫', '–º–µ—Ñ', '–º–µ—Ñ–µ–¥—Ä–æ–Ω', '—Å–µ–∫—Å', '–ø–æ—Ä–Ω–æ', '18+',
    '—Å–ø–∞–π—Å', '–≥–∞—à–∏—à', '–∫–æ–∫–∞–∏–Ω', '–º–∞—Ä–∏—Ö—É–∞–Ω–∞', '—Ç—Ä–∞–≤–∫–∞', '–∑–∞–∫–ª–∞–¥–∫'
]

# –°–ø–∏—Å–æ–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Ç–µ–≥–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —á–µ—Ä–µ–∑ API –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è
FORBIDDEN_TAGS = ['drugs', 'narcotic', 'weapon', 'nude', 'porn', 'nsfw', 'adult content']


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π - —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ –≤ —á–∞—Ç
@photo_del_router.message(F.photo)
async def handle_photo(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –≥—Ä—É–ø–ø–æ–≤–æ–π —á–∞—Ç
    if message.chat.type in ['group', 'supergroup']:
        chat_id = message.chat.id
        user_id = message.from_user.id

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö —á–∞—Ç–∞
        async with get_session() as session:
            settings = await get_chat_settings(session, chat_id)
            if not settings or not settings.enable_photo_filter:
                return  # –ï—Å–ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞ - –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É

            # –ï—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –∞–¥–º–∏–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑—Ä–µ—à–∞–µ—Ç –∞–¥–º–∏–Ω–∞–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ñ–æ—Ç–æ - –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏—Ö —Å–æ–æ–±—â–µ–Ω–∏—è
            chat_member = await message.chat.get_member(user_id)
            if chat_member.status in ['creator', 'administrator'] and settings.admins_bypass_photo_filter:
                return

        forbidden_content_found = False  # –§–ª–∞–≥ –Ω–∞–ª–∏—á–∏—è –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        reason = ""  # –ü—Ä–∏—á–∏–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏
        found_words = []  # –ù–∞–π–¥–µ–Ω–Ω—ã–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞

        # –≠–¢–ê–ü 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ (–µ—Å–ª–∏ –µ—Å—Ç—å)
        if message.caption:
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Ç–µ–∫—Å—Ç –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –¥–ª—è –Ω–µ—á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ–≥–æ –∫ —Ä–µ–≥–∏—Å—Ç—Ä—É –ø–æ–∏—Å–∫–∞
            caption_lower = message.caption.lower()

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
            for word in FORBIDDEN_WORDS:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ü–µ–ª—ã—Ö —Å–ª–æ–≤ (–∞ –Ω–µ —á–∞—Å—Ç–∏ —Å–ª–æ–≤)
                if re.search(r'\b' + re.escape(word) + r'\b', caption_lower):
                    found_words.append(word)

            # –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞ - –ø–æ–º–µ—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –∫–∞–∫ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π
            if found_words:
                forbidden_content_found = True
                reason = f"–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –ø–æ–¥–ø–∏—Å–∏ –∫ —Ñ–æ—Ç–æ: {', '.join(found_words)}"

        # –≠–¢–ê–ü 2: –ï—Å–ª–∏ –ø–æ —Ç–µ–∫—Å—Ç—É –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API
        if not forbidden_content_found:
            # –ü–æ–ª—É—á–∞–µ–º —Ñ–æ—Ç–æ –≤ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º –∫–∞—á–µ—Å—Ç–≤–µ (–ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Å–ø–∏—Å–∫–µ - —Å–∞–º—ã–π –±–æ–ª—å—à–æ–π —Ä–∞–∑–º–µ—Ä)
            photo = message.photo[-1]
            file_id = photo.file_id

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á–µ—Ä–µ–∑ API –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è
            try:
                # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —á–µ—Ä–µ–∑ Telegram Bot API
                file = await message.bot.get_file(file_id)
                file_path = file.file_path
                # –§–æ—Ä–º–∏—Ä—É–µ–º URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞
                file_url = f"https://api.telegram.org/file/bot{config.BOT_TOKEN}/{file_path}"

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É
                is_forbidden, image_reason = await check_image_content(file_url)
                if is_forbidden:
                    forbidden_content_found = True
                    reason = image_reason
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")

        # –≠–¢–ê–ü 3: –ï—Å–ª–∏ –Ω–∞–π–¥–µ–Ω –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ø—Ä–∏–Ω–∏–º–∞–µ–º –º–µ—Ä—ã
        if forbidden_content_found:
            try:
                # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
                await message.delete()

                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –º—É—Ç–∞ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
                async with get_session() as session:
                    settings = await get_chat_settings(session, chat_id)
                    mute_minutes = settings.photo_filter_mute_minutes if settings else 60

                # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è –º—É—Ç–∞
                until_date = datetime.now() + timedelta(minutes=mute_minutes)

                # –ú—É—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ
                await message.chat.restrict(
                    user_id,
                    permissions=message.chat.permissions.model_copy(
                        update={"can_send_messages": False}
                    ),
                    until_date=until_date
                )

                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º—É—Ç–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
                async with get_session() as session:
                    await session.execute(
                        insert(UserRestriction).values(
                            user_id=user_id,
                            chat_id=chat_id,
                            restriction_type="mute",
                            reason=reason,
                            expires_at=until_date
                        )
                    )
                    await session.commit()

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —á–∞—Ç –æ –ø—Ä–∏–º–µ–Ω—ë–Ω–Ω—ã—Ö –º–µ—Ä–∞—Ö
                notification = await message.answer(
                    f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.mention_html()} –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º.\n"
                    f"üîá –í—ã–¥–∞–Ω –º—É—Ç –Ω–∞ {mute_minutes} –º–∏–Ω—É—Ç."
                )

                # –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 30 —Å–µ–∫—É–Ω–¥ –¥–ª—è —á–∏—Å—Ç–æ—Ç—ã —á–∞—Ç–∞
                asyncio.create_task(
                    delete_message_after_delay(message.bot, chat_id, notification.message_id, 30)
                )

                # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ–±—ã—Ç–∏–µ
                logger.info(
                    f"–£–¥–∞–ª–µ–Ω–æ —Ñ–æ—Ç–æ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –≤ —á–∞—Ç–µ {chat_id}: {reason}"
                )

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–æ—Ç–æ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º: {str(e)}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ API –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è
async def check_image_content(image_url):
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ API –∫–æ–º–ø—å—é—Ç–µ—Ä–Ω–æ–≥–æ –∑—Ä–µ–Ω–∏—è

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: (bool, str) - (–Ω–∞–π–¥–µ–Ω –ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç, –ø—Ä–∏—á–∏–Ω–∞)
    """
    try:
        # –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Azure Computer Vision API (–ø—Ä–∏–º–µ—Ä)
        async with aiohttp.ClientSession() as session:
            # API –∫–ª—é—á –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞
            headers = {
                'Ocp-Apim-Subscription-Key': config.VISION_API_KEY,
                'Content-Type': 'application/json'
            }

            # –§–æ—Ä–º–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ API
            vision_url = f"{config.VISION_API_ENDPOINT}/vision/v3.1/analyze"
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è –≤–∑—Ä–æ—Å–ª–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            params = {'visualFeatures': 'Adult,Tags,Description'}
            body = {"url": image_url}

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∏ –ø–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            async with session.post(vision_url, headers=headers, params=params, json=body) as response:
                if response.status == 200:
                    result = await response.json()

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –≤–∑—Ä–æ—Å–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (–ø–æ—Ä–Ω–æ, 18+)
                    if 'adult' in result:
                        adult_data = result['adult']
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –º–µ—Ç—Ä–∏–∫–∏ –æ—Ü–µ–Ω–∫–∏ –≤–∑—Ä–æ—Å–ª–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ä–æ–≥–æ–º —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏
                        if adult_data.get('isAdultContent', False) and adult_data.get('adultScore', 0) > 0.7:
                            return True, "–û–±–Ω–∞—Ä—É–∂–µ–Ω –≤–∑—Ä–æ—Å–ª—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"
                        if adult_data.get('isRacyContent', False) and adult_data.get('racyScore', 0) > 0.8:
                            return True, "–û–±–Ω–∞—Ä—É–∂–µ–Ω –Ω–µ–ø—Ä–∏–µ–º–ª–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ç–µ–≥–∏ (–Ω–∞—Ä–∫–æ—Ç–∏–∫–∏, –æ—Ä—É–∂–∏–µ –∏ —Ç.–¥.)
                    if 'tags' in result:
                        for tag in result['tags']:
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Ç–µ–≥–∞–º–∏
                            if any(forbidden.lower() in tag['name'].lower() for forbidden in FORBIDDEN_TAGS) and tag[
                                'confidence'] > 0.7:
                                return True, f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç: {tag['name']}"

                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    if 'description' in result and 'captions' in result['description']:
                        for caption in result['description']['captions']:
                            caption_text = caption['text'].lower()
                            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
                            for word in FORBIDDEN_WORDS:
                                if word.lower() in caption_text and caption['confidence'] > 0.7:
                                    return True, f"–û–±–Ω–∞—Ä—É–∂–µ–Ω –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏: {word}"

        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫–∏ —á–µ—Ä–µ–∑ –¥—Ä—É–≥–∏–µ API –¥–ª—è –±–æ–ª—å—à–µ–π —Ç–æ—á–Ω–æ—Å—Ç–∏

        # –ï—Å–ª–∏ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
        return False, ""

    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")
        # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (—Ä–∞–∑—Ä–µ—à–∞–µ–º)
        return False, ""


# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
async def delete_message_after_delay(bot, chat_id, message_id, delay_seconds):
    """–£–¥–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–∏"""
    await asyncio.sleep(delay_seconds)  # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
    try:
        await bot.delete_message(chat_id, message_id)  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {message_id} —É–¥–∞–ª–µ–Ω–æ –∏–∑ —á–∞—Ç–∞ {chat_id} –ø–æ—Å–ª–µ –∑–∞–¥–µ—Ä–∂–∫–∏ {delay_seconds} —Å–µ–∫")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id} –≤ —á–∞—Ç–µ {chat_id}: {str(e)}")
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {message_id} –≤ —á–∞—Ç–µ {chat_id}: {str(e)}")


# –£–ü–†–ê–í–õ–ï–ù–ò–ï –ù–ê–°–¢–†–û–ô–ö–ê–ú–ò –§–ò–õ–¨–¢–†–ê –§–û–¢–û–ì–†–ê–§–ò–ô

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ —Ñ–æ—Ç–æ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
@photo_del_router.callback_query(F.data == "toggle_photo_filter")
async def toggle_photo_filter(callback: CallbackQuery):
    """–í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞ —Ñ–æ—Ç–æ"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ–ª–±—ç–∫ –ø—Ä–∏—à–µ–ª –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —á–∞—Ç–µ (–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ —Å –±–æ—Ç–æ–º)
    if callback.message and callback.message.chat.id == callback.from_user.id:
        # –ü–æ–ª—É—á–∞–µ–º ID —á–∞—Ç–∞, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –º–µ–Ω—è—é—Ç—Å—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        chat_id = int(callback.data.split('_')[-1]) if '_' in callback.data else None

        if not chat_id:
            await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞", show_alert=True)
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –∏–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞
        async with get_session() as session:
            settings = await get_chat_settings(session, chat_id)
            new_state = not (settings.enable_photo_filter if settings else False)

            # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ –ë–î
            if settings:
                await session.execute(
                    update(ChatSettings).where(
                        ChatSettings.chat_id == chat_id
                    ).values(
                        enable_photo_filter=new_state
                    )
                )
            else:
                # –ï—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç, —Å–æ–∑–¥–∞–µ–º –∏—Ö
                await session.execute(
                    insert(ChatSettings).values(
                        chat_id=chat_id,
                        enable_photo_filter=new_state
                    )
                )

            await session.commit()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Å–º–µ–Ω–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        await callback.answer(
            f"–§–∏–ª—å—Ç—Ä —Ñ–æ—Ç–æ {'–≤–∫–ª—é—á–µ–Ω' if new_state else '–≤—ã–∫–ª—é—á–µ–Ω'} –¥–ª—è –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞",
            show_alert=True
        )

        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ñ—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –º—É—Ç–∞ –∑–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ
@photo_del_router.callback_query(F.data == "set_photo_filter_mute_time")
async def set_photo_filter_mute_time(callback: CallbackQuery):
    """–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –º—É—Ç–∞ –∑–∞ –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ"""
    if callback.message and callback.message.chat.id == callback.from_user.id:
        chat_id = int(callback.data.split('_')[-1]) if '_' in callback.data else None

        if not chat_id:
            await callback.answer("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞", show_alert=True)
            return

        # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –≤—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞–º–∏
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(text="15 –º–∏–Ω—É—Ç", callback_data=f"set_photo_mute_time_15_{chat_id}"),
                InlineKeyboardButton(text="30 –º–∏–Ω—É—Ç", callback_data=f"set_photo_mute_time_30_{chat_id}")
            ],
            [
                InlineKeyboardButton(text="1 —á–∞—Å", callback_data=f"set_photo_mute_time_60_{chat_id}"),
                InlineKeyboardButton(text="3 —á–∞—Å–∞", callback_data=f"set_photo_mute_time_180_{chat_id}")
            ],
            [
                InlineKeyboardButton(text="1 –¥–µ–Ω—å", callback_data=f"set_photo_mute_time_1440_{chat_id}"),
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"chat_settings_{chat_id}")
            ]
        ])

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–æ–≤–æ–π –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        await callback.message.edit_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –º—É—Ç–∞ –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π:",
            reply_markup=keyboard
        )

        await callback.answer()


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ –º—É—Ç–∞
@photo_del_router.callback_query(lambda c: c.data.startswith("set_photo_mute_time_"))
async def process_photo_mute_time(callback: CallbackQuery):
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –º—É—Ç–∞"""
    if callback.message and callback.message.chat.id == callback.from_user.id:
        # –†–∞–∑–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
        parts = callback.data.split('_')
        if len(parts) >= 5:
            minutes = int(parts[4])  # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∏–Ω—É—Ç –º—É—Ç–∞
            chat_id = int(parts[5])  # ID —á–∞—Ç–∞

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤ –ë–î
            async with get_session() as session:
                settings = await get_chat_settings(session, chat_id)

                if settings:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    await session.execute(
                        update(ChatSettings).where(
                            ChatSettings.chat_id == chat_id
                        ).values(
                            photo_filter_mute_minutes=minutes
                        )
                    )
                else:
                    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                    await session.execute(
                        insert(ChatSettings).values(
                            chat_id=chat_id,
                            photo_filter_mute_minutes=minutes
                        )
                    )

                await session.commit()

            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–∏–Ω—É—Ç—ã –≤ —É–¥–æ–±–æ—á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
            time_text = f"{minutes} –º–∏–Ω—É—Ç" if minutes < 60 else f"{minutes // 60} —á–∞—Å(–æ–≤)" if minutes < 1440 else f"{minutes // 1440} –¥–µ–Ω—å(–¥–Ω–µ–π)"

            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            await callback.answer(f"–í—Ä–µ–º—è –º—É—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {time_text}", show_alert=True)

            # –ó–¥–µ—Å—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–∑–≤—Ä–∞—Ç –≤ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞
