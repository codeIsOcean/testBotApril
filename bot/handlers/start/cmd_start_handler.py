# ‚úÖ –û–±–Ω–æ–≤–ª—ë–Ω: 04.05.25
from aiogram import Router, types, F, Bot
from aiogram.types import CallbackQuery, Message
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import ChatMemberUpdated
from aiogram.filters.chat_member_updated import ChatMemberUpdatedFilter
from aiogram.enums.chat_member_status import ChatMemberStatus
from aiogram.fsm.context import FSMContext
import logging
from aiogram.filters import CommandStart
from sqlalchemy.ext.asyncio import AsyncSession

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫—É
from bot.services.start_logic import (
    check_and_create_user,
    process_setup_deeplink,
    process_captcha_deeplink,
    process_bot_added_to_group,
    get_support_text,
    get_information_text,
    get_available_groups,
    get_settings_keyboard
)
from bot.keyboards.main_menu_keyboard import get_main_menu_buttons
# –Ω–æ–≤—ã–π –∏–º–ø–æ—Ä—Ç –ø–æ—Å–ª–µ —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ –¥–∏–ø –ª–∏–Ω–∫
from bot.services.start_logic import check_and_create_user, get_available_groups
from bot.keyboards.main_menu_keyboard import get_main_menu_buttons


cmd_start_router = Router()


@cmd_start_router.message(CommandStart(deep_link=True))
async def cmd_start(message: types.Message, command: CommandStart, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start —Å deep_link"""
    logging.info(f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} (ID: {message.from_user.id}) –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–º–∞–Ω–¥—É /start.")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await check_and_create_user(
        message.from_user.id,
        message.from_user.username,
        message.from_user.full_name,
        session
    )

    if not is_admin:
        await message.answer("–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å "
                             "@texas_dev")
        return

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ deep link –Ω–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫—É
    if command.args:
        if command.args.startswith("setup_"):
            group_id = command.args.replace("setup_", "")

            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º setup deep link
            result = await process_setup_deeplink(message.bot, message.from_user.id, group_id)

            if not result["success"]:
                await message.answer(result["message"])
                return

            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
            await message.answer(
                result["message"],
                parse_mode="Markdown",
                disable_web_page_preview=True
            )

            # –ü–æ–ª—É—á–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
            settings_keyboard = await get_settings_keyboard()
            await message.answer(
                "üëá –ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫:",
                reply_markup=settings_keyboard
            )
            return

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ deep link –¥–ª—è –∫–∞–ø—á–∏
        if command.args.startswith("captcha_"):
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º captcha deep link
            result = await process_captcha_deeplink(message.bot, message.from_user.id, command.args)

            if not result["success"]:
                await message.answer(result["message"])
                return

            captcha_data = result["captcha_data"]
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–ø—á—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.answer(
                f"–î–ª—è –≤—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø—É {captcha_data['group_name']} —Ä–µ—à–∏—Ç–µ –∑–∞–¥–∞—á—É:\n\n"
                f"<b>{captcha_data['num1']} {captcha_data['operation']} {captcha_data['num2']} = ?</b>\n\n"
                f"–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:",
                reply_markup=captcha_data['keyboard'],
                parse_mode="HTML",
                disable_web_page_preview=True
            )
            return

    # –û–±—ã—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    await message.answer(
        text=f"*{message.from_user.full_name}* üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è "
             f"—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=get_main_menu_buttons(),
        parse_mode="Markdown"
    )


@cmd_start_router.message(CommandStart())
async def start_without_args(message: types.Message, session: AsyncSession):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–æ—Å—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã /start –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤"""
    logging.info(f"üëã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.full_name} (ID: {message.from_user.id}) –æ—Ç–ø—Ä–∞–≤–∏–ª –æ–±—ã—á–Ω—ã–π /start.")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    is_admin = await check_and_create_user(
        message.from_user.id,
        message.from_user.username,
        message.from_user.full_name,
        session
    )

    if not is_admin:
        await message.answer(
            "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –±–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ. –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å @texas_dev")
        return

    # –û–±—ã—á–Ω–æ–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
    await message.answer(
        text=f"*{message.from_user.full_name}* üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –Ø –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è "
             f"—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:",
        reply_markup=get_main_menu_buttons(),
        parse_mode="Markdown",
        disable_web_page_preview=True
    )


@cmd_start_router.callback_query(F.data == "add_group")
async def add_bot_group_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""
    # –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥—Ä—É–ø–ø—ã —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    text = await get_available_groups(call.from_user.id)
    await call.message.answer(text)


@cmd_start_router.callback_query(F.data == "support")
async def support_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–¥–µ—Ä–∂–∫–µ"""
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    support_text = await get_support_text()
    await call.message.edit_text(support_text)


@cmd_start_router.callback_query(F.data == "information")
async def information_callback(call: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ"""
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–∏—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
    info_text = await get_information_text()
    await call.message.edit_text(info_text)


@cmd_start_router.my_chat_member(ChatMemberUpdatedFilter(member_status_changed=True))
async def bot_chat_member_update(event: ChatMemberUpdated):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–±—ã—Ç–∏—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É"""
    # –ë–æ—Ç –±—ã–ª –¥–æ–±–∞–≤–ª–µ–Ω –≤ –≥—Ä—É–ø–ø—É
    if event.new_chat_member.status in [ChatMemberStatus.MEMBER, ChatMemberStatus.ADMINISTRATOR]:
        # –î–µ–ª–µ–≥–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –±–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–µ
        await process_bot_added_to_group(
            event.bot,
            event.from_user.id,
            event.chat.id,
            event.chat.title
        )